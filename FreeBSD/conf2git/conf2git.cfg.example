# conf2git.cfg.example â€” Example configuration (edit & copy to /usr/local/scripts/conf2git.cfg)

# /usr/local/scripts/conf2git.cfg.example
# -----------------------------------------------------------------------------
# Example configuration file for conf2git.sh
# -----------------------------------------------------------------------------
# NOTE: This is only an example file. Copy or rename it to:
#   /usr/local/scripts/conf2git.cfg
# and adjust the values as needed for your environment.
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Directories to export
# List of directories whose contents will be tracked in Git.
# Add or remove paths as needed for your environment.
# -----------------------------------------------------------------------------
CONF_DIRS="/etc /usr/local/scripts /usr/local/www/cgi-bin"

# -----------------------------------------------------------------------------
# Base working directory
# Root folder under which the Git repository will be cloned and managed.
# -----------------------------------------------------------------------------
BASE_DIR="/var/git-export"

# -----------------------------------------------------------------------------
# Local clone directory
# The full path where the repository will be cloned locally.
# Typically BASE_DIR + /Servers
# -----------------------------------------------------------------------------
REPO_ROOT="$BASE_DIR/Servers"

# -----------------------------------------------------------------------------
# Remote repository URL
# The Git repository URL (SSH or HTTPS) where commits will be pushed.
# Replace with your own Git server/repository.
# -----------------------------------------------------------------------------
GIT_REPO_URL="git@vesta.mpc.com.br:mpc/servers.git"

# -----------------------------------------------------------------------------
# Sparse-checkout path
# Defines the working tree subset for this host only, based on its OS and
# short hostname. This ensures each host only sees its own configuration.
# -----------------------------------------------------------------------------
TARGET_PATH="$OS/$HOSTNAME_SHORT"

# -----------------------------------------------------------------------------
# Host subtree path
# Combines REPO_ROOT and TARGET_PATH to form the local working directory for
# this host's configuration files.
# -----------------------------------------------------------------------------
REPO_DIR="$REPO_ROOT/$TARGET_PATH"

# -----------------------------------------------------------------------------
# Concurrency control lockfile
# Path to a lockfile used to prevent concurrent runs of conf2git.sh.
# -----------------------------------------------------------------------------
LOCKFILE="/var/run/conf2git.lock"

# -----------------------------------------------------------------------------
# Log file path
# File where script execution logs will be written.
# -----------------------------------------------------------------------------
LOGFILE="/var/log/conf2git.log"

# -----------------------------------------------------------------------------
# Management report (optional)
# If set to "1", enables the end-of-run report (same as using -r/--report).
# You can override per-run by setting the environment variable or CLI flag.
# -----------------------------------------------------------------------------
CONF2GIT_REPORT="12"

# -----------------------------------------------------------------------------
# Git identity for commits
# These values are applied to git config in the repository to identify the
# author of commits made by the script.
# -----------------------------------------------------------------------------
GIT_USER_NAME="Backup Bot"              # Name used in git commits
GIT_USER_EMAIL="backup-bot@mpc.com.br"  # Email used in git commits

# -----------------------------------------------------------------------------
# Self-update settings
# If AUTO_UPDATE is "yes", the script will attempt to download the latest
# conf2git.sh from UPDATE_URL at the beginning of each run, compare hashes, and
# replace itself atomically if a newer version is found.
# You can also force the update once with the CLI flag: --self-update
# -----------------------------------------------------------------------------
AUTO_UPDATE="yes"   # values: "yes" or "no"
UPDATE_URL="https://raw.githubusercontent.com/kmansur/Scripts/refs/heads/main/FreeBSD/conf2git/conf2git.sh"

# EXPECTED_SHA256=""

ALIGN_MODE="rebase"   # or "reset"
